/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation files('src/main/java/com/jgaap/lib/commons-cli-1.2.jar')
    implementation files('src/main/java/com/jgaap/lib/edu.mit.jwi_2.2.3.jar')
    implementation files('src/main/java/com/jgaap/lib/guava-17.0.jar')
    implementation files('src/main/java/com/jgaap/lib/javassist-3.17.1.jar')
    implementation files('src/main/java/com/jgaap/lib/jscience-4.3.1.jar')
    implementation files('src/main/java/com/jgaap/lib/junit.jar')
    implementation files('src/main/java/com/jgaap/lib/log4j-api-2.23.1.jar')
    implementation files('src/main/java/com/jgaap/lib/log4j-core-2.23.1.jar')
    implementation files('src/main/java/com/jgaap/lib/log4j-iostreams-2.23.1.jar')
    implementation files('src/main/java/com/jgaap/lib/reflections-0.9.8.jar')
    implementation files('src/main/java/com/jgaap/lib/stanford-ner-2012-07-09.jar')
    implementation files('src/main/java/com/jgaap/lib/stanford-postagger-2012-07-09.jar')
    implementation files('src/main/java/com/jgaap/lib/tika-app-1.5.jar')
    implementation files('src/main/java/com/jgaap/lib/weka.jar')
    implementation files('src/main/java/com/jgaap/lib/WordSegment.jar')
}


configurations {
    // declare a configuration that is going to resolve the compile classpath of the application
    compileClasspath.extendsFrom()

    // declare a configuration that is going to resolve the runtime classpath of the application
    runtimeClasspath.extendsFrom(someConfiguration)
}


// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

javafx {
    version = "21.0.3"
    modules = [ 'javafx.controls', 'javafx.graphics' ]
}

application {
    // Define the main class for the application.
    mainClass = 'com.jgaap.JGAAP'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
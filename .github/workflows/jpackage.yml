name: Package JGAAP

on:
  push:
    branches: [ "gradle" ]
  pull_request:
    types:
      - closed

jobs:
  build-windows-installer:
    name: Build Installer on Windows
    runs-on: windows-latest
    steps:

# SETUP BUILD ENVIRONMENT
    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v4
    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v4
      with:
        java-package: jdk+fx
        architecture: x64
        distribution: 'zulu'
        java-version: '21'

# BUILD FOR DISTRIBUTION
    - id: build
      name: Build distribution
      run: ./gradlew jpackage

# SAVE INSTALLER
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        path: ./jgaap/build/jpackage/JGAAP-9.0.0.msi
        name: windows-installer
        retention-days: 1
        
  build-macos-intel-installer:
    name: Build Installer on macOS intel
    runs-on: macos-13
    steps:

# SETUP BUILD ENVIRONMENT
    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v4
    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v4
      with:
        java-package: jdk+fx
        architecture: x64
        distribution: 'zulu'
        java-version: '21'

# BUILD FOR DISTRIBUTION
    - id: build
      name: Build distribution
      run: ./gradlew jpackage

# SAVE INSTALLER
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        path: ./jgaap/build/jpackage/JGAAP-x86_64-9.0.0.dmg
        name: macOS-dmg-Intel
        retention-days: 1
        
  build-macos-AS-installer:
    name: Build Installer on macOS ARM
    runs-on: macos-latest
    steps:

# SETUP BUILD ENVIRONMENT
    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v4
    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v4
      with:
        java-package: jdk+fx
        architecture: aarch64
        distribution: 'zulu'
        java-version: '21'

# BUILD FOR DISTRIBUTION
    - id: build
      name: Build distribution
      run: ./gradlew jpackage

# SAVE INSTALLER
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        path: ./jgaap/build/jpackage/JGAAP-aarch64-9.0.0.dmg
        name: macOS-dmg-AS
        retention-days: 1

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-windows-installer,  build-macos-AS-installer,  build-macos-intel-installer]
    steps:

# DOWNLOAD INSTALLERS
    - id: download-macos-intel-installer
      name: Download macOS Intel Installer
      uses: actions/download-artifact@v4
      with:
        name: macOS-dmg-Intel

    - id: download-macos-arm-installer
      name: Download macOS Apple Silicon Installer
      uses: actions/download-artifact@v4
      with:
        name: macOS-dmg-AS

    - id: download-windows-installer
      name: Download Windows installer
      uses: actions/download-artifact@v4
      with:
        name: windows-installer

# CREATE GITHUB RELEASE AND ADD ASSETS

    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - Modernized for Java Versions 9+
          - JavaFX Based UI
          - Gradle build support
          - Native Application Images
        draft: false
        prerelease: false
    - name: Upload macOS Apple Silicon Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        asset_path: JGAAP-aarch64-9.0.0.dmg
        asset_name: JGAAP-aarch64-9.0.0.dmg
        asset_content_type: application/x-binary
    - name: Upload macOS Intel Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        asset_path: JGAAP-x86_64-9.0.0.dmg
        asset_name: JGAAP-x86_64-9.0.0.dmg
        asset_content_type: application/x-binary
    - name: Upload Windows Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        asset_path: JGAAP-9.0.0.msi
        asset_name: JGAAP-9.0.0.msi
        asset_content_type: application/x-binary
      


